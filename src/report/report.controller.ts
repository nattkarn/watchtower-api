import { Body, Controller, HttpCode, Post, UseGuards } from '@nestjs/common';
import { ReportService } from './report.service';
import { JwtAuthGuard } from 'src/auth/jwt-auth.guard';
import {
  ApiBearerAuth,
  ApiBody,
  ApiOperation,
  ApiResponse,
  ApiTags,
} from '@nestjs/swagger';
import { ExportCsvByDateDto } from './dto/export-csv-date.dto'; // üëà 1. Import DTO

@ApiTags('Report') // üëà 2. ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° API
@ApiBearerAuth() // üëà 3. ‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å endpoint ‡πÉ‡∏ô‡∏ô‡∏µ‡πâ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Bearer Token
@UseGuards(JwtAuthGuard) // ‡πÉ‡∏ä‡πâ Guard ‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å route ‡πÉ‡∏ô Controller ‡∏ô‡∏µ‡πâ
@Controller('report')
export class ReportController {
  constructor(private readonly reportService: ReportService) {}

  @Post('export-csv')
  @HttpCode(200)
  // --- Swagger ---
  @ApiOperation({ summary: 'Export all data to a CSV string' })
  @ApiResponse({
    status: 200,
    description: 'Returns a string containing the data in CSV format.',
    content: { 'text/csv': { schema: { type: 'string' } } },
  })
  @ApiResponse({ status: 401, description: 'Unauthorized' })
  // ---------------
  async exportCsv() {
    const csv = await this.reportService.exportCsv();
    return csv;
  }

  @Post('export-csv-date')
  @HttpCode(200)
  // --- Swagger ---
  @ApiOperation({ summary: 'Export data within a date range to a CSV string' })
  @ApiBody({ type: ExportCsvByDateDto }) // üëà 4. ‡∏£‡∏∞‡∏ö‡∏∏ Body DTO
  @ApiResponse({
    status: 200,
    description: 'Returns a string containing the filtered data in CSV format.',
    content: { 'text/csv': { schema: { type: 'string' } } },
  })
  @ApiResponse({ status: 401, description: 'Unauthorized' })
  // ---------------
  async exportCsvByDate(@Body() body: ExportCsvByDateDto) { // üëà 5. ‡πÉ‡∏ä‡πâ DTO ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
    const csv = await this.reportService.exportCsvByDate(
      body.fromDate,
      body.toDate,
    );
    // console.log(csv);
    return csv;
  }
}
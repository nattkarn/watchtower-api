// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  tel       String?
  line      String?   
  password  String
  level     String   @default("user") // user, admin
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    String   @default("inactive") // active, inactive
  urls      Url[]
}

model Url {
  id              Int      @id @default(autoincrement())
  url             String   @unique
  label           String
  sslExpireDate   DateTime?
  isSslExpireSoon Boolean?
  status          String   @default("inactive") // active, inactive, maintenance
  lastCheckedAt   DateTime?
  lastStatusCode  Int? // 200, 404, 500, 502, 503, 504
  ownerId         Int
  owner           User     @relation(fields: [ownerId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  alertLogs AlertLog[]

  @@index([ownerId])
<<<<<<< Updated upstream
=======
}

model AlertLog {
  id         Int      @id @default(autoincrement())
  urlId      Int
  url        Url      @relation(fields: [urlId], references: [id])
  type       String   // 'status-change' | 'ssl-expire'
  message    String
  createdAt  DateTime @default(now())
>>>>>>> Stashed changes
}